#+title: Dynamic terminal title for Elvish
#+author: Diego Zamboni
#+email: diego@zzamboni.org

This module allows setting the terminal title dynamically using ANSI
escape codes. By default the current directory is shown, and the name
of the current command while one is executing.

This file is written in [[http://www.howardism.org/Technical/Emacs/literate-programming-tutorial.html][literate programming style]], to make it easy
to explain. See [[file:$name.elv][$name.elv]] for the generated file.

* Table of Contents                                            :TOC:noexport:
- [[#usage][Usage]]
- [[#implementation][Implementation]]

* Usage

Install the =elvish-modules= package using [[https://elvish.io/ref/epm.html][epm]]:

#+begin_src elvish
  use epm
  epm:install github.com/zzamboni/elvish-modules
#+end_src

In your =rc.elv=, load this module:

#+begin_src elvish
  use github.com/zzamboni/elvish-modules/terminal-title
#+end_src

Call =terminal-title:setup= to set up the corresponding hooks:

#+begin_src elvish
  terminal-title:setup
#+end_src

By default the terminal title will show the name of the command being
executed or the word ~"elvish"~, followed by the current path.


* Implementation
:PROPERTIES:
:header-args:elvish: :tangle (concat (file-name-sans-extension (buffer-file-name)) ".elv")
:header-args: :mkdirp yes :comments no
:END:

#+BEGIN_SRC elvish :exports none
  # DO NOT EDIT THIS FILE DIRECTLY
  # This is a file generated from a literate programing source file located at
  # https://github.com/zzamboni/elvish-modules/blob/master/terminal-title.org.
  # You should make any changes there and regenerate it from Emacs org-mode using C-c C-v t
#+END_SRC

The =set-title= function takes a string and sets it as the current
terminal title. The ANSI escape sequences to start/end the title
setting can be configured in the =$terminal-title:start= and
=$terminal-title:end= variables.

#+begin_src elvish
  start = "\e]0;"
  end = "\e\\"

  fn set-title [title]{
    print $start$title$end > /dev/tty
  }
#+end_src

The =setup= function sets up the corresponding prompt hooks.

#+begin_src elvish
  use ./prompt_hooks
  use re

  fn setup {
    prompt_hooks:add-before-readline {
      set-title "elvish "(tilde-abbr $pwd)
    }
    prompt_hooks:add-after-readline [cmd]{
      set-title (re:split '\s' $cmd | take 1)" "(tilde-abbr $pwd)
    }
  }
#+end_src
